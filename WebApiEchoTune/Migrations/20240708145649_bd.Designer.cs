// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApiEchoTune.Contexts;

#nullable disable

namespace WebApiEchoTune.Migrations
{
    [DbContext(typeof(EchoTuneContext))]
    [Migration("20240708145649_bd")]
    partial class bd
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebApiEchoTune.Domains.Musica", b =>
                {
                    b.Property<Guid>("IdMusica")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<TimeOnly>("Duracao")
                        .HasColumnType("TIME");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("VARCHAR(60)");

                    b.Property<string>("NomeAlbum")
                        .IsRequired()
                        .HasColumnType("VARCHAR(60)");

                    b.Property<string>("NomeArtista")
                        .IsRequired()
                        .HasColumnType("VARCHAR(60)");

                    b.HasKey("IdMusica");

                    b.ToTable("Musica");
                });

            modelBuilder.Entity("WebApiEchoTune.Domains.MusicaUsuario", b =>
                {
                    b.Property<Guid>("IdMusicaUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Favoritada")
                        .HasColumnType("BIT");

                    b.Property<Guid>("IdMusica")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdUsuario")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("IdMusicaUsuario");

                    b.HasIndex("IdMusica");

                    b.HasIndex("IdUsuario");

                    b.ToTable("MusicaUsuario");
                });

            modelBuilder.Entity("WebApiEchoTune.Domains.PlayList", b =>
                {
                    b.Property<Guid>("IdPlaylist")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdUsuario")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("VARCHAR(60)");

                    b.Property<string>("Tema")
                        .IsRequired()
                        .HasColumnType("VARCHAR(60)");

                    b.HasKey("IdPlaylist");

                    b.HasIndex("IdUsuario");

                    b.ToTable("PlayList");
                });

            modelBuilder.Entity("WebApiEchoTune.Domains.PlayListMusica", b =>
                {
                    b.Property<Guid>("IdPlayListMusica")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdMusica")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdPlayList")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("IdPlayListMusica");

                    b.HasIndex("IdMusica");

                    b.HasIndex("IdPlayList");

                    b.ToTable("PlayListMusica");
                });

            modelBuilder.Entity("WebApiEchoTune.Domains.Usuario", b =>
                {
                    b.Property<Guid>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<Guid>("IdUsuarioMidia")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("VARCHAR(60)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("VARCHAR(60)");

                    b.Property<Guid?>("UsuarioMidiaIdUsuarioMidia")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("IdUsuario");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("UsuarioMidiaIdUsuarioMidia");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("WebApiEchoTune.Domains.UsuarioMidia", b =>
                {
                    b.Property<Guid>("IdUsuarioMidia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BlobName")
                        .HasColumnType("VARCHAR(60)");

                    b.Property<string>("Foto")
                        .HasColumnType("TEXT");

                    b.HasKey("IdUsuarioMidia");

                    b.ToTable("UsuarioMidia");
                });

            modelBuilder.Entity("WebApiEchoTune.Domains.MusicaUsuario", b =>
                {
                    b.HasOne("WebApiEchoTune.Domains.Musica", "Musica")
                        .WithMany()
                        .HasForeignKey("IdMusica")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApiEchoTune.Domains.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Musica");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("WebApiEchoTune.Domains.PlayList", b =>
                {
                    b.HasOne("WebApiEchoTune.Domains.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("WebApiEchoTune.Domains.PlayListMusica", b =>
                {
                    b.HasOne("WebApiEchoTune.Domains.Musica", "Musica")
                        .WithMany()
                        .HasForeignKey("IdMusica")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApiEchoTune.Domains.PlayList", "PlayList")
                        .WithMany()
                        .HasForeignKey("IdPlayList")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Musica");

                    b.Navigation("PlayList");
                });

            modelBuilder.Entity("WebApiEchoTune.Domains.Usuario", b =>
                {
                    b.HasOne("WebApiEchoTune.Domains.UsuarioMidia", "UsuarioMidia")
                        .WithMany()
                        .HasForeignKey("UsuarioMidiaIdUsuarioMidia");

                    b.Navigation("UsuarioMidia");
                });
#pragma warning restore 612, 618
        }
    }
}
